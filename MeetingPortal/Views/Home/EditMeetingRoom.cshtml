@model MeetingRoomViewModel
@{
    ViewBag.Title = "Редактирование комнаты переговоров";
    Layout = "~/Views/Shared/_LayoutCore.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditMeetingRoom", "Home", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)
    <div class="alert-info">
        @(!string.IsNullOrEmpty(ViewBag.IsSuccess) ? "Комната для переговоров успешно сохранена" : "")
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.NumberOfChair)
        @Html.TextBoxFor(x => x.NumberOfChair, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <div class="form-check">
            @Html.CheckBoxFor(x => x.HaveMarkerBoard, new { @class = "form-check-input" })
            @Html.LabelFor(x => x.HaveMarkerBoard, new { @class = "form-check-label" })
        </div>
    </div>
    <div class="form-group">
        <div class="form-check">
            @Html.CheckBoxFor(x => x.HaveProjector, new { @class = "form-check-input" })
            @Html.LabelFor(x => x.HaveProjector, new { @class = "form-check-label" })
        </div>
    </div>

    <div class="alert-danger">
        @Html.ValidationSummary()
    </div>
    <button type="submit" class="btn btn-primary" @(!string.IsNullOrEmpty(ViewBag.IsSuccess) ? "disabled" : "")>
        Сохранить
    </button>
}